{"version":3,"sources":["store/users.js","components/Login/index.js","components/SignUp/index.js","store/affirmations.js","components/Affirmations/index.js","components/Navigation/index.js","components/Slash/index.js","store/entries.js","components/Dream/index.js","components/Gratitude/index.js","components/Morning/index.js","components/DailyJournal/index.js","store/ratings.js","components/Ratings/index.js","components/Evening/index.js","App.js","store/index.js","index.js"],"names":["setUser","user","type","payload","login","dispatch","a","username","password","fetch","method","headers","body","JSON","stringify","response","json","data","signUp","name","initialState","userReducer","newState","state","action","Object","assign","LoginForm","toggleLogin","slideLogin","setNav","setSlideLogin","toggleNav","useDispatch","history","useHistory","useState","errors","setErrors","setUsername","setPassword","onLogin","e","preventDefault","push","className","onSubmit","map","error","idx","key","value","placeholder","onChange","target","onClickCapture","onClick","SignUpForm","slideSignup","toggleSignup","setName","onSignUp","setAffirmation","affirmation","setAffirmations","affirmations","addAffirmation","res","x","deleteAffirmation","console","log","affirmationReducer","parse","id","Affirmations","toggleAffirmation","handleAffirmation","deleteAff","v","window","location","reload","entries","useSelector","k","class","onMouseUp","NavBar","toggleEvening","toggleMorning","nav","setAuthenticated","affirmationModal","setAffirmationModal","sessionUser","users","onLogout","to","exact","activeClassName","appElement","document","getElementById","style","overlay","textAlign","backgroundColor","zIndex","isOpen","Slash","date","color","setEntry","entry","setEntries","addEntry","userId","prompt","entryReducer","Dream","dreamModal","toggleDreamModal","setData","handleEntry","Date","toLocaleDateString","Gratitude","gratModal","toggleGratModal","Morning","slideMorning","setDreamModal","setGratModal","journalModal","toggleJournal","setRating","rating","setRatings","ratings","ratingReducer","Ratings","toggleRating","setCurrRating","stars","getElementsByName","Array","from","forEach","star","dataset","hoverRating","parseInt","clear","onMouseLeave","keys","n","data-value","onMouseOver","Evening","slideEvening","setJournalModal","ratingModal","setRatingModal","DailyJournal","App","enhancer","authenticated","loaded","setLoaded","setSlideSignup","setSlideMorning","setSlideEvening","useEffect","SignUp","path","rootReducer","combineReducers","applyMiddleware","thunk","store","preloadedState","createStore","configureStore","Root","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.c0776ab3.chunk.js","sourcesContent":["const SET_USER = 'user/setUser';\nconst REMOVE_USER = 'user/removeUser';\n\nexport const setUser = (user) => ({\n    type: SET_USER,\n    payload: user,\n});\n\nexport const removeUser = () => ({\n    type: REMOVE_USER,\n});\n\nexport const authenticate = () => async (dispatch) => {\n    const response = await fetch('/api/auth/');\n    const data = await response.json();\n    return dispatch(setUser(data));\n};\n\nexport const login = (user) => async (dispatch) => {\n    const { username, password } = user;\n    const response = await fetch('/api/auth/login', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n            username,\n            password,\n        }),\n    });\n    const data = await response.json();\n    return dispatch(setUser(data));\n};\n\nexport const logout = () => async (dispatch) => {\n    const response = await fetch('/api/auth/logout', {\n        headers: {\n            'Content-Type': 'application/json',\n        },\n    });\n    dispatch(removeUser());\n    return response;\n};\n\nexport const signUp = (user) => async (dispatch) => {\n    const { name, username, password } = user;\n    const response = await fetch('/api/auth/signup', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({\n            username,\n            name,\n            password,\n        }),\n    });\n    const data = await response.json();\n    return dispatch(setUser(data));\n};\n\nexport const restoreUser = () => async (dispatch) => {\n    const response = await fetch('/api/auth/');\n    const data = await response.json();\n    dispatch(setUser(data));\n    return response;\n};\n\nconst initialState = { user: null };\n\nconst userReducer = (state = initialState, action) => {\n    let newState;\n    switch (action.type) {\n        case SET_USER:\n            return { ...state, ...{ user: action.payload } };\n        case REMOVE_USER:\n            newState = Object.assign({}, state);\n            newState.user = null;\n            return newState;\n        default:\n            return state;\n    }\n};\n\nexport default userReducer;\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { login } from '../../store/users';\nimport './Login.css';\n\nconst LoginForm = ({\n    toggleLogin,\n    slideLogin,\n    setNav,\n    setSlideLogin,\n    toggleNav,\n}) => {\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const [errors, setErrors] = useState([]);\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n\n    const onLogin = async (e) => {\n        e.preventDefault();\n        const user = await dispatch(login({ username, password }));\n        if (!user.payload.errors) {\n            setSlideLogin(false);\n\n            history.push('/');\n            setNav(true);\n        } else {\n            setErrors(user.payload.errors);\n        }\n    };\n\n    const updateUsername = (e) => {\n        e.preventDefault();\n        setUsername(e.target.value);\n    };\n\n    const updatePassword = (e) => {\n        setPassword(e.target.value);\n    };\n\n    return (\n        <div\n            className={\n                slideLogin ? 'login-container active' : 'login-container'\n            }\n        >\n            <div className=\"login-form-container\">\n                <form onSubmit={onLogin}>\n                    <div className=\"errors-container\">\n                        {errors &&\n                            errors.map((error, idx) => (\n                                <div className=\"error\" key={idx} value={error}>\n                                    {error}\n                                </div>\n                            ))}\n                    </div>\n                    <div className=\"username-container\">\n                        <input\n                            className=\"username\"\n                            name=\"username\"\n                            type=\"text\"\n                            placeholder=\"username\"\n                            value={username}\n                            onChange={updateUsername}\n                        />\n                    </div>\n                    <div className=\"password-container\">\n                        <input\n                            className=\"password\"\n                            name=\"password\"\n                            type=\"password\"\n                            placeholder=\"Password\"\n                            value={password}\n                            onChange={updatePassword}\n                        />\n                    </div>\n                    <div className=\"button-container\">\n                        <button className=\"login-signup-button\" type=\"submit\">\n                            Login\n                        </button>\n                    </div>\n                </form>\n                <div>\n                    <button\n                        className=\"cancel-button\"\n                        onClickCapture={toggleNav}\n                        onClick={toggleLogin}\n                    >\n                        ⬅\n                    </button>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default LoginForm;\n","import React, { useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { useDispatch } from 'react-redux';\nimport { signUp } from '../../store/users';\nimport './Signup.css';\n\nconst SignUpForm = ({ slideSignup, toggleSignup, setNav, toggleNav }) => {\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const [username, setUsername] = useState('');\n    const [name, setName] = useState('');\n    const [password, setPassword] = useState('');\n    const [errors, setErrors] = useState([]);\n\n    const onSignUp = async (e) => {\n        e.preventDefault();\n        const user = await dispatch(signUp({ name, username, password }));\n        if (!user.payload.errors) {\n            toggleSignup();\n            setNav(true);\n            history.push('/');\n        } else {\n            setErrors(user.payload.errors);\n        }\n    };\n\n    const updateUsername = (e) => {\n        setUsername(e.target.value);\n    };\n\n    const updateName = (e) => {\n        setName(e.target.value);\n    };\n\n    const updatePassword = (e) => {\n        setPassword(e.target.value);\n    };\n\n    return (\n        <div\n            className={\n                slideSignup ? 'signup-container active' : 'signup-container'\n            }\n        >\n            <div className=\"signup-form-container\">\n                <form onSubmit={onSignUp}>\n                    <div className=\"name-container\">\n                        <input\n                            className=\"name\"\n                            placeholder=\"Name\"\n                            type=\"text\"\n                            name=\"name\"\n                            onChange={updateName}\n                            value={name}\n                        ></input>\n                    </div>\n                    <div className=\"username-container\">\n                        <input\n                            className=\"username\"\n                            placeholder=\"Username\"\n                            type=\"text\"\n                            name=\"username\"\n                            onChange={updateUsername}\n                            value={username}\n                        ></input>\n                    </div>\n                    <div className=\"password-container\">\n                        <input\n                            className=\"password\"\n                            placeholder=\"Password\"\n                            type=\"password\"\n                            name=\"password\"\n                            onChange={updatePassword}\n                            value={password}\n                        ></input>\n                    </div>\n\n                    <div className=\"button-container\">\n                        <button className=\"login-signup-button\" type=\"submit\">\n                            Signup\n                        </button>\n                    </div>\n                </form>\n                <div>\n                    <button\n                        className=\"cancel-button\"\n                        onClickCapture={toggleNav}\n                        onClick={toggleSignup}\n                    >\n                        ⬅\n                    </button>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default SignUpForm;\n","const SET_AFFIRMATION = 'affirmation/setAffirmation';\nconst GET_AFFIRMATIONS = 'affirmation/setAffirmations';\nconst REMOVE_AFFIRMATION = 'affirmation/removeAffirmation';\n\nexport const setAffirmation = (affirmation) => ({\n    type: SET_AFFIRMATION,\n    payload: affirmation,\n});\n\nexport const setAffirmations = (affirmations) => ({\n    type: GET_AFFIRMATIONS,\n    payload: affirmations,\n});\n\nexport const getAffirmations = () => async (dispatch) => {\n    const res = await fetch('/api/affirmation/');\n    const data = await res.json();\n    dispatch(setAffirmations(data));\n};\n\nexport const addAffirmation = (affirmation) => async (dispatch) => {\n    const res = await fetch('/api/affirmation/', {\n        method: 'POST',\n        headers: {\n            'Content-type': 'application/json',\n        },\n        body: JSON.stringify({\n            affirmation,\n        }),\n    });\n    const x = await res.json();\n    return dispatch(setAffirmation(x));\n};\n\nexport const deleteAffirmation = (affirmation) => async (dispatch) => {\n    console.log(affirmation);\n    const res = await fetch('/api/affirmation/', {\n        method: 'DELETE',\n        headers: {\n            'Content-type': 'application/json',\n        },\n        body: JSON.stringify({ affirmation }),\n    });\n    const x = res.json();\n    console.log(x);\n    return dispatch(setAffirmations(x));\n};\n\nconst affirmationReducer = (state = {}, action) => {\n    let newState = JSON.parse(JSON.stringify(state));\n    switch (action.type) {\n        case SET_AFFIRMATION:\n            newState[action.payload.id] = action.payload;\n            return newState;\n        case GET_AFFIRMATIONS:\n            for (let affirmation in action.payload) {\n                newState[action.payload[affirmation].id] =\n                    action.payload[affirmation];\n            }\n            return newState;\n        default:\n            return state;\n    }\n};\n\nexport default affirmationReducer;\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n    addAffirmation,\n    deleteAffirmation,\n    getAffirmations,\n} from '../../store/affirmations';\n\nimport './Affirmations.css';\n\nconst Affirmations = ({ toggleAffirmation, toggleNav }) => {\n    const dispatch = useDispatch();\n    const [affirmation, setAffirmation] = useState('');\n\n    const updateAffirmation = (e) => setAffirmation(e.target.value);\n\n    const handleAffirmation = async (e) => {\n        e.preventDefault();\n        await dispatch(addAffirmation(affirmation));\n    };\n\n    const deleteAff = async (e, v) => {\n        e.preventDefault();\n        await dispatch(deleteAffirmation(v));\n        await window.location.reload(true);\n    };\n\n    return (\n        <div className=\"affirmation-container\">\n            <div className=\"aff-header\">affirmations</div>\n\n            <div>\n                <div className=\"aff-list\">\n                    {Object.entries(\n                        useSelector((state) => state.affirmations)\n                    ).map(([k, v]) => {\n                        return (\n                            <div>\n                                <div\n                                    className=\"aff-list-item\"\n                                    key={k}\n                                    value={v}\n                                >\n                                    {v.affirmations}{' '}\n                                    <i\n                                        onClick={(e) => deleteAff(e, v)}\n                                        class=\"fas fa-minus-circle\"\n                                    ></i>\n                                </div>\n                            </div>\n                        );\n                    })}\n                </div>\n            </div>\n            <form onSubmit={handleAffirmation}>\n                <div className=\"aff-form-submit\">\n                    <input\n                        className=\"aff-input\"\n                        type=\"text\"\n                        onChange={updateAffirmation}\n                    ></input>\n                    <div>\n                        <button type=\"submit\" className=\"dream-button aff\">\n                            <i class=\"fas fa-check-circle aff\"></i>\n                        </button>\n                    </div>\n                </div>\n            </form>\n            <button\n                className=\"cancel-button aff\"\n                onClick={toggleAffirmation}\n                onMouseUp={toggleNav}\n            >\n                ⬅\n            </button>\n        </div>\n        // </div>\n    );\n};\n\nexport default Affirmations;\n","import React, { useState } from 'react';\nimport Modal from 'react-modal';\nimport Affirmations from '../Affirmations';\nimport { NavLink } from 'react-router-dom';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { logout } from '../../store/users';\n\nimport './Navigation.css';\n\nconst NavBar = ({\n    toggleEvening,\n    toggleMorning,\n    toggleLogin,\n    nav,\n    setNav,\n    toggleNav,\n    setAuthenticated,\n    toggleSignup,\n}) => {\n    const dispatch = useDispatch();\n    const [affirmationModal, setAffirmationModal] = useState(false);\n\n    const sessionUser = useSelector((state) => state.users.user);\n    const errors = useSelector((state) =>\n        sessionUser ? sessionUser.errors : null\n    );\n\n    const style = {\n        overlay: {\n            textAlign: 'center',\n            backgroundColor: 'rgba(255,255,255, 0.9)',\n            zIndex: '1000',\n        },\n    };\n\n    const toggleAffirmation = () => setAffirmationModal(!affirmationModal);\n\n    const onLogout = async (e) => {\n        e.preventDefault();\n        await dispatch(logout());\n        await window.location.reload(true);\n    };\n\n    if (sessionUser && !errors) {\n        return (\n            <div className=\"navbar\">\n                <div className=\"menu-bars\" onClick={toggleNav}>\n                    <i class=\"fas fa-bars\"></i>h\n                </div>\n\n                <nav className={nav ? 'nav-menu active' : 'nav-menu'}>\n                    <ul onClick={toggleNav} className=\"nav-menu-items\">\n                        <li className=\"nav-text\">\n                            <NavLink\n                                to=\"/\"\n                                exact={true}\n                                activeClassName=\"active\"\n                            >\n                                Home\n                            </NavLink>\n                        </li>\n                        <li className=\"nav-text\">\n                            <a\n                                onClick={toggleNav}\n                                onClickCapture={toggleMorning}\n                                activeClassName=\"active\"\n                            >\n                                Morning\n                            </a>\n                        </li>\n                        <li className=\"nav-text\">\n                            <a\n                                onClick={toggleNav}\n                                onClickCapture={toggleEvening}\n                                activeClassName=\"active\"\n                            >\n                                Evening\n                            </a>\n                        </li>\n                        <li className=\"nav-text\">\n                            <a\n                                onClick={toggleNav}\n                                onClickCapture={toggleAffirmation}\n                                activeClassName=\"active\"\n                            >\n                                Affirmation\n                            </a>\n                        </li>\n                        <li className=\"nav-text\">\n                            <NavLink\n                                to=\"/\"\n                                onClick={onLogout}\n                                activeClassName=\"active\"\n                            >\n                                <button className=\"login-signup-button\">\n                                    Logout\n                                </button>\n                            </NavLink>\n                        </li>\n                    </ul>\n                    <Modal\n                        appElement={document.getElementById('root')}\n                        className=\"affirmation-modal\"\n                        style={style}\n                        isOpen={affirmationModal}\n                    >\n                        <div>\n                            <Affirmations\n                                toggleNav={toggleNav}\n                                toggleAffirmation={toggleAffirmation}\n                            />\n                        </div>\n                    </Modal>\n                </nav>\n            </div>\n        );\n    } else {\n        return (\n            <div className=\"navbar\">\n                <div className=\"menu-bars\" onClick={toggleNav}>\n                    <i class=\"fas fa-bars\"></i>\n                </div>\n\n                <nav className={nav ? 'nav-menu active' : 'nav-menu'}>\n                    <ul onClick={toggleNav} className=\"nav-menu-items\">\n                        <li className=\"nav-text\">\n                            <a onClick={toggleLogin} activeClassName=\"active\">\n                                Login\n                            </a>\n                        </li>\n                        <li className=\"nav-text\">\n                            <a onClick={toggleSignup} activeClassName=\"active\">\n                                Signup\n                            </a>\n                        </li>\n                    </ul>\n                </nav>\n            </div>\n        );\n    }\n};\n\nexport default NavBar;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\n\nconst Slash = ({ date }) => {\n    const sessionUser = useSelector((state) => state.users.user);\n    const errors = useSelector((state) =>\n        sessionUser ? sessionUser.errors : null\n    );\n\n    // const thirtyDays = () => {\n    //     const data = [date];\n    //     Array.from() {\n    //         const prior = new Date(\n    //             new Date().setDate(new Date().getDate() - )\n    //         );\n    //         data.unshift(prior.toLocaleDateString());\n    //     }\n    //     return data;\n    // };\n\n    if (sessionUser && !errors) {\n        return (\n            <div>\n                <h1 style={{ color: 'white' }}>{}</h1>\n            </div>\n        );\n    } else {\n        return (\n            <div>\n                <h1 style={{ color: 'white' }}>LANDINGPAGE</h1>\n            </div>\n        );\n    }\n};\n\nexport default Slash;\n","const SET_ENTRY = 'entry/setEntry';\nconst GET_ENTRIES = 'entry/setEntries';\n\nexport const setEntry = (entry) => ({\n    type: SET_ENTRY,\n    payload: entry,\n});\n\nexport const setEntries = (entries) => ({\n    type: GET_ENTRIES,\n    payload: entries,\n});\n\nexport const getEntries = () => async (dispatch) => {\n    const res = await fetch('/api/entry/');\n    const data = await res.json();\n    dispatch(setEntries(data));\n};\n\nexport const addEntry = (entry, userId) => async (dispatch) => {\n    const { prompt, data, type, date } = entry;\n    const res = await fetch(`/api/entry/`, {\n        method: 'POST',\n        headers: {\n            'Content-type': 'application/json',\n        },\n        body: JSON.stringify({\n            prompt,\n            data,\n            type,\n            date,\n        }),\n    });\n    const x = await res.json();\n    return dispatch(setEntry(x));\n};\n\nconst entryReducer = (state = {}, action) => {\n    let newState = JSON.parse(JSON.stringify(state));\n    switch (action.type) {\n        case SET_ENTRY:\n            newState[action.payload.id] = action.payload;\n            return newState;\n        case GET_ENTRIES:\n            for (let entry in action.payload) {\n                newState[action.payload[entry].id] = action.payload[entry];\n            }\n            return newState;\n        default:\n            return state;\n    }\n};\n\nexport default entryReducer;\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addEntry } from '../../store/entries';\nimport './Dream.css';\n\nconst Dream = ({ dreamModal, toggleDreamModal, toggleNav }) => {\n    const dispatch = useDispatch();\n    const [data, setData] = useState('');\n    const user = useSelector((state) => state.users.user);\n    let userId;\n    if (user) {\n        userId = user.id;\n    }\n    const prompt =\n        'Talk a little about your dream, what emotions did they make you feel?';\n\n    const handleEntry = async (e) => {\n        e.preventDefault();\n        let type = 'dream';\n        let x = new Date();\n        let date = x.toLocaleDateString();\n        await dispatch(addEntry({ prompt, data, type, date }));\n        toggleDreamModal();\n    };\n\n    const updateEntry = (e) => {\n        setData(e.target.value);\n    };\n    return (\n        <div className=\"dream-form-container\">\n            <form className=\"dream-form\" onSubmit={handleEntry}>\n                <div className=\"dream-prompt-container\">\n                    <label className=\"dream-prompt\">{prompt}</label>\n                </div>\n                <div className=\"dream-input-container\">\n                    <textarea\n                        className=\"dream dream-input\"\n                        name=\"entry\"\n                        value={data}\n                        onChange={updateEntry}\n                        placeholder=\"... |\"\n                    />\n                </div>\n                <div className=\"dream-button-container\">\n                    <button type=\"submit\" className=\"dream-button\">\n                        <i class=\"fas fa-check-circle\"></i>\n                    </button>\n                </div>\n            </form>\n            <button\n                className=\"cancel-button\"\n                onClick={toggleDreamModal}\n                onMouseUp={toggleNav}\n            >\n                ⬅\n            </button>\n        </div>\n    );\n};\n\nexport default Dream;\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addEntry } from '../../store/entries';\nimport '../Dream/Dream.css';\nimport './Gratitude.css';\n\nconst Gratitude = ({ gratModal, toggleGratModal, toggleNav }) => {\n    const dispatch = useDispatch();\n    const [data, setData] = useState('');\n\n    const prompt =\n        'Try to remember back to your first job and think about what it was like when you were new there...';\n\n    const handleEntry = async (e) => {\n        e.preventDefault();\n        let type = 'gratitude';\n        let x = new Date();\n        let date = x.toLocaleDateString();\n        await dispatch(addEntry({ prompt, data, type, date }));\n        toggleGratModal();\n    };\n\n    const updateEntry = (e) => {\n        setData(e.target.value);\n    };\n    return (\n        <div className=\"gratitude-form-container\">\n            <form className=\"dream-form\" onSubmit={handleEntry}>\n                <div className=\"dream-prompt-container\">\n                    <label className=\"dream-prompt\">{prompt}</label>\n                </div>\n\n                <div className=\"dream-input-container\">\n                    <textarea\n                        className=\"dream dream-input\"\n                        name=\"entry\"\n                        value={data}\n                        onChange={updateEntry}\n                        placeholder=\"... |\"\n                    />\n                </div>\n\n                <div className=\"dream-button-container\">\n                    <button type=\"submit\" className=\"dream-button\">\n                        <i class=\"fas fa-check-circle\"></i>\n                    </button>\n                </div>\n            </form>\n            <button\n                className=\"cancel-button\"\n                onClick={toggleGratModal}\n                onMouseUp={toggleNav}\n            >\n                ⬅\n            </button>\n        </div>\n    );\n};\n\nexport default Gratitude;\n","import React, { useState } from 'react';\nimport Modal from 'react-modal';\nimport Dream from '../Dream';\nimport Gratitude from '../Gratitude';\nimport './Morning.css';\n\nconst Morning = ({ toggleMorning, slideMorning, toggleNav }) => {\n    const [dreamModal, setDreamModal] = useState(false);\n    const [gratModal, setGratModal] = useState(false);\n\n    const style = {\n        overlay: {\n            textAlign: 'center',\n            backgroundColor: 'rgba(255,255,255, 0.7)',\n            zIndex: '1000',\n        },\n    };\n\n    const toggleDreamModal = () => setDreamModal(!dreamModal);\n    const toggleGratModal = () => setGratModal(!gratModal);\n\n    return (\n        <div\n            className={\n                slideMorning ? 'morning-container active' : 'morning-container'\n            }\n        >\n            <ul onClick={toggleMorning} className=\"morning-menu-items\">\n                <li className=\"morning-text\">\n                    <a onClick={toggleDreamModal}>Dream Journal</a>\n                </li>\n                <li className=\"morning-text\">\n                    <a activeClassName=\"active\">Brain Boosters</a>\n                </li>\n                <li className=\"morning-text\">\n                    <a onClick={toggleGratModal} activeClassName=\"active\">\n                        Gratitude\n                    </a>\n                </li>\n                <li className=\"morning-text\">\n                    <a activeClassName=\"active\">Daily Health Tips</a>\n                </li>\n                <div>\n                    <button\n                        className=\"cancel-button\"\n                        onClick={toggleMorning}\n                        onMouseUp={toggleNav}\n                    >\n                        ⬅\n                    </button>\n                </div>\n            </ul>\n            <div>\n                <Modal\n                    appElement={document.getElementById('root')}\n                    className=\"dream-modal\"\n                    style={style}\n                    isOpen={dreamModal}\n                >\n                    <div>\n                        <Dream\n                            toggleNav={toggleNav}\n                            toggleDreamModal={toggleDreamModal}\n                        />\n                    </div>\n                </Modal>\n            </div>\n            <div>\n                <Modal\n                    appElement={document.getElementById('root')}\n                    className=\"grat-modal\"\n                    style={style}\n                    isOpen={gratModal}\n                >\n                    <div>\n                        <Gratitude\n                            toggleNav={toggleNav}\n                            toggleGratModal={toggleGratModal}\n                        />\n                    </div>\n                </Modal>\n            </div>\n        </div>\n    );\n};\n\nexport default Morning;\n","import React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addEntry } from '../../store/entries';\nimport '../Dream/Dream.css';\nimport './Journal.css';\n\nconst Gratitude = ({ journalModal, toggleJournal, toggleNav }) => {\n    const dispatch = useDispatch();\n    const [data, setData] = useState('');\n\n    const prompt = 'Talk about one thing that made you happy today';\n\n    const handleEntry = async (e) => {\n        e.preventDefault();\n        let type = 'journal';\n        let x = new Date();\n        let date = x.toLocaleDateString();\n        await dispatch(addEntry({ prompt, data, type, date }));\n        toggleJournal();\n    };\n\n    const updateEntry = (e) => {\n        setData(e.target.value);\n    };\n    return (\n        <div className=\"journal-form-container\">\n            <form className=\"dream-form\" onSubmit={handleEntry}>\n                <div className=\"dream-prompt-container\">\n                    <label className=\"dream-prompt\">{prompt}</label>\n                </div>\n\n                <div className=\"dream-input-container\">\n                    <textarea\n                        className=\"dream dream-input\"\n                        name=\"entry\"\n                        value={data}\n                        onChange={updateEntry}\n                        placeholder=\"... |\"\n                    />\n                </div>\n\n                <div className=\"dream-button-container\">\n                    <button type=\"submit\" className=\"dream-button\">\n                        <i class=\"fas fa-check-circle\"></i>\n                    </button>\n                </div>\n            </form>\n            <button\n                className=\"cancel-button\"\n                onClick={toggleJournal}\n                onMouseUp={toggleNav}\n            >\n                ⬅\n            </button>\n        </div>\n    );\n};\n\nexport default Gratitude;\n","const SET_RATING = 'rating/setRating';\nconst GET_RATINGS = 'rating/setRatings';\n\nexport const setRating = (rating) => ({\n    type: SET_RATING,\n    payload: rating,\n});\n\nexport const setRatings = (ratings) => ({\n    type: GET_RATINGS,\n    payload: ratings,\n});\n\nexport const getRatings = () => async (dispatch) => {\n    const res = await fetch('/api/rating/');\n    const data = await res.json();\n    dispatch(setRatings(data));\n};\n\nexport const addRating = (data) => async (dispatch) => {\n    const { rating, date } = data;\n    const res = await fetch(`/api/rating/`, {\n        method: 'POST',\n        headers: {\n            'Content-type': 'application/json',\n        },\n        body: JSON.stringify({\n            rating,\n            date,\n        }),\n    });\n    const x = await res.json();\n    return dispatch(setRating(x));\n};\n\nconst ratingReducer = (state = {}, action) => {\n    let newState = JSON.parse(JSON.stringify(state));\n    switch (action.type) {\n        case SET_RATING:\n            newState[action.payload.id] = action.payload;\n            return newState;\n        case GET_RATINGS:\n            for (let rating in action.payload) {\n                newState[action.payload[rating].id] = action.payload[rating];\n            }\n            return newState;\n        default:\n            return state;\n    }\n};\nexport default ratingReducer;\n","import React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { addRating } from '../../store/ratings';\nimport './Ratings.css';\n\nconst Ratings = ({ toggleRating, toggleNav }) => {\n    const dispatch = useDispatch();\n    const [currRating, setCurrRating] = useState(0);\n    const [rating, setRating] = useState(0);\n\n    const stars = document.getElementsByName('star');\n\n    Array.from(stars).forEach((star) => {\n        star.className =\n            star.dataset.value <= rating ? 'fas fa-star active' : 'fas fa-star';\n    });\n\n    const handleRating = (e) => {\n        setRating(parseInt(e.target.dataset.value));\n        Array.from(stars).forEach((star) => {\n            star.className =\n                rating >= parseInt(star.dataset.value)\n                    ? 'fas fa-star active'\n                    : 'fas fa-star';\n        });\n    };\n\n    const hoverRating = (e) => {\n        setRating(parseInt(e.target.dataset.value));\n        Array.from(stars).forEach((star) => {\n            star.className =\n                e.target.dataset.value >= parseInt(star.dataset.value)\n                    ? 'fas fa-star active'\n                    : 'fas fa-star';\n        });\n    };\n\n    const clickHandler = (e) => {\n        console.log(rating);\n        let x = new Date();\n        let date = x.toLocaleDateString();\n        dispatch(addRating({ rating, date }));\n        toggleRating();\n    };\n\n    let clear = () => {\n        setCurrRating(0);\n        Array.from(stars).forEach((star) => {\n            star.className = 'fas fa-star';\n        });\n    };\n\n    return (\n        <div className=\"ratings-container\">\n            <div onMouseLeave={handleRating} className=\"star-container\">\n                <div>\n                    {[...Array(10).keys()].map((n) => {\n                        return (\n                            <i\n                                data-value={n + 1}\n                                name=\"star\"\n                                key={n + 1}\n                                onMouseOver={hoverRating}\n                                onMouseLeave={clear}\n                                class=\"fas fa-star\"\n                            ></i>\n                        );\n                    })}\n                </div>\n            </div>\n            <div className=\"button-container\">\n                <button\n                    className=\"submit-button rating\"\n                    onClick={clickHandler}\n                    onClickCapture={toggleNav}\n                >\n                    ✓\n                </button>\n                <button\n                    className=\"cancel-button rating\"\n                    onClick={toggleRating}\n                    onClickCapture={toggleNav}\n                >\n                    ⬅\n                </button>\n            </div>\n        </div>\n    );\n};\n\nexport default Ratings;\n","import React, { useState } from 'react';\nimport Modal from 'react-modal';\nimport DailyJournal from '../DailyJournal';\nimport Ratings from '../Ratings';\nimport './Evening.css';\n\nconst Evening = ({ toggleEvening, slideEvening, toggleNav }) => {\n    const [journalModal, setJournalModal] = useState(false);\n    const [ratingModal, setRatingModal] = useState(false);\n\n    const style = {\n        overlay: {\n            textAlign: 'center',\n            backgroundColor: 'rgba(118,118,118, 0.9)',\n            zIndex: '1000',\n        },\n    };\n\n    const ratingStyle = {\n        overlay: {\n            textAlign: 'center',\n            backgroundColor: 'rgba(255,255,255,0.7)',\n            zIndex: '1000',\n        },\n    };\n\n    const toggleJournal = () => setJournalModal(!journalModal);\n    const toggleRating = () => setRatingModal(!ratingModal);\n\n    return (\n        <div\n            className={\n                slideEvening ? 'evening-container active' : 'evening-container'\n            }\n        >\n            <ul onClick={toggleEvening} className=\"evening-menu-items\">\n                <li className=\"evening-text\">\n                    <a onClick={toggleJournal} activeClassName=\"active\">\n                        Daily Journal\n                    </a>\n                </li>\n                <li className=\"evening-text\">\n                    <a onClick={toggleRating} activeClassName=\"active\">\n                        Rate Today{' '}\n                    </a>\n                </li>\n                <li className=\"evening-text\">\n                    <a activeClassName=\"active\">Sleep Tips</a>\n                </li>\n                <div>\n                    <button\n                        className=\"cancel-button\"\n                        onClick={toggleEvening}\n                        onClickCapture={toggleNav}\n                    >\n                        ⬅\n                    </button>\n                </div>\n            </ul>\n            <div>\n                <Modal\n                    appElement={document.getElementById('root')}\n                    className=\"journal-modal\"\n                    style={style}\n                    isOpen={journalModal}\n                >\n                    <div>\n                        <DailyJournal\n                            toggleNav={toggleNav}\n                            toggleJournal={toggleJournal}\n                        />\n                    </div>\n                </Modal>\n                <Modal\n                    appElement={document.getElementById('root')}\n                    className=\"rating-modal\"\n                    style={ratingStyle}\n                    isOpen={ratingModal}\n                >\n                    <div>\n                        <Ratings\n                            toggleNav={toggleNav}\n                            toggleRating={toggleRating}\n                        />\n                    </div>\n                </Modal>\n            </div>\n        </div>\n    );\n};\n\nexport default Evening;\n","import React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { Route, Switch } from 'react-router-dom';\nimport LoginForm from './components/Login';\nimport SignUpForm from './components/SignUp';\nimport NavBar from './components/Navigation';\nimport Slash from './components/Slash';\nimport Morning from './components/Morning';\nimport Evening from './components/Evening';\nimport { restoreUser, authenticate } from './store/users';\nimport { getAffirmations } from './store/affirmations';\nimport { getEntries } from './store/entries';\nimport { getRatings } from './store/ratings';\n\nfunction App() {\n    const dispatch = useDispatch();\n    const [authenticated, setAuthenticated] = useState(false);\n    const [loaded, setLoaded] = useState(false);\n    const [nav, setNav] = useState(false);\n    const [slideLogin, setSlideLogin] = useState(false);\n    const [slideSignup, setSlideSignup] = useState(false);\n    const [slideMorning, setSlideMorning] = useState(false);\n    const [slideEvening, setSlideEvening] = useState(false);\n    const [date, setDate] = useState(new Date());\n\n    const toggleNav = () => setNav(!nav);\n    const toggleLogin = () => setSlideLogin(!slideLogin);\n    const toggleSignup = () => setSlideSignup(!slideSignup);\n    const toggleMorning = () => setSlideMorning(!slideMorning);\n    const toggleEvening = () => setSlideEvening(!slideEvening);\n\n    useEffect(() => {\n        const user = authenticate();\n        if (!user.errors) {\n            dispatch(restoreUser());\n            setAuthenticated(true);\n            dispatch(getAffirmations());\n            dispatch(getEntries());\n            dispatch(getRatings());\n        }\n        setLoaded(true);\n    });\n\n    useEffect(() => {\n        setNav(true);\n    }, []);\n\n    if (!loaded) return null;\n\n    return (\n        <>\n            <NavBar\n                toggleMorning={toggleMorning}\n                toggleEvening={toggleEvening}\n                toggleLogin={toggleLogin}\n                nav={nav}\n                setNav={setNav}\n                toggleNav={toggleNav}\n                setAuthenticated={setAuthenticated}\n                authenticated={authenticated}\n                toggleSignup={toggleSignup}\n            />\n            <LoginForm\n                toggleNav={toggleNav}\n                setNav={setNav}\n                toggleLogin={toggleLogin}\n                slideLogin={slideLogin}\n                setSlideLogin={setSlideLogin}\n            />\n            <SignUpForm\n                toggleNav={toggleNav}\n                setNav={setNav}\n                slideSignup={slideSignup}\n                toggleSignup={toggleSignup}\n            />\n            <Morning\n                toggleMorning={toggleMorning}\n                slideMorning={slideMorning}\n                toggleNav={toggleNav}\n            />\n            <Evening\n                toggleEvening={toggleEvening}\n                slideEvening={slideEvening}\n                toggleNav={toggleNav}\n            />\n            <Switch>\n                <Route path=\"/\" exact={true}>\n                    <Slash date={date} />\n                </Route>\n            </Switch>\n        </>\n    );\n}\n\nexport default App;\n","import { createStore, combineReducers, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport userReducer from './users';\nimport entryReducer from './entries';\nimport ratingReducer from './ratings';\nimport affirmationReducer from './affirmations';\n\nconst rootReducer = combineReducers({\n    users: userReducer,\n    entries: entryReducer,\n    ratings: ratingReducer,\n    affirmations: affirmationReducer,\n});\n\nlet enhancer;\n\nif (process.env.NODE_ENV === 'production') {\n    enhancer = applyMiddleware(thunk);\n} else {\n    const logger = require('redux-logger').default;\n    const composeEnhancers =\n        window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n    enhancer = composeEnhancers(applyMiddleware(thunk, logger));\n}\n\nconst configureStore = (preloadedState) => {\n    return createStore(rootReducer, preloadedState, enhancer);\n};\n\nexport default configureStore;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport configureStore from './store';\nimport * as userActions from '../src/store/users';\n\nconst store = configureStore();\n\nif (process.env.NODE_ENV !== 'production') {\n    window.store = store;\n    window.userActions = userActions;\n}\n\nfunction Root() {\n    return (\n        <Provider store={store}>\n            <BrowserRouter>\n                <App />\n            </BrowserRouter>\n        </Provider>\n    );\n}\n\nReactDOM.render(\n    <React.StrictMode>\n        <Root />\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}